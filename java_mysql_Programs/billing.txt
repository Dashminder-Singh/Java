package stockmgt;

import java.awt.event.KeyEvent;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static stockmgt.globalvariables.PASSWORD;
import static stockmgt.globalvariables.PATH;
import static stockmgt.globalvariables.PLACE;
import static stockmgt.globalvariables.USERNAME;

public class sales extends javax.swing.JInternalFrame implements globalvariables {

/**
* Creates new form newproduct
*/
boolean flag2=false,flag3=true;
public sales() {
initComponents();
jButton4.setVisible(false);
fetchbillno();
// jScrollPane1.setVisible(false);
Connection myconnection;
try
{
myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
try
{
String a="select * from category_table";
PreparedStatement mystatement=myconnection.prepareStatement(a); 
ResultSet myresult=mystatement.executeQuery();
if(myresult.next())
{
do
{
jComboBox1.addItem(myresult.getString("catname"));
}
while(myresult.next());
}
else
{
JOptionPane.showMessageDialog(rootPane, "No Categories added yet");
}

}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
}
finally
{
myconnection.close();
}

}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
}

}




/**
* This method is called from within the constructor to initialize the form.
* WARNING: Do NOT modify this code. The content of this method is always
* regenerated by the Form Editor.
*/
@SuppressWarnings("unchecked")
// <editor-fold defaultstate="collapsed" desc="Generated Code"> 
private void initComponents() {

jComboBox1 = new javax.swing.JComboBox<>();
jComboBox2 = new javax.swing.JComboBox<>();
jComboBox3 = new javax.swing.JComboBox<>();
jScrollPane1 = new javax.swing.JScrollPane();
jTable1 = new javax.swing.JTable();
jButton1 = new javax.swing.JButton();
jButton2 = new javax.swing.JButton();
jDateChooser1 = new com.toedter.calendar.JDateChooser();
jLabel1 = new javax.swing.JLabel();
jLabel2 = new javax.swing.JLabel();
jLabel3 = new javax.swing.JLabel();
jFormattedTextField1 = new javax.swing.JFormattedTextField();
jButton3 = new javax.swing.JButton();
jLabel4 = new javax.swing.JLabel();
jFormattedTextField2 = new javax.swing.JFormattedTextField();
jLabel5 = new javax.swing.JLabel();
jLabel6 = new javax.swing.JLabel();
jTextField1 = new javax.swing.JTextField();
jButton4 = new javax.swing.JButton();

setClosable(true);
setIconifiable(true);
setMaximizable(true);
setResizable(true);
setTitle("Sales");

jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Category" }));
jComboBox1.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
jComboBox1ActionPerformed(evt);
}
});

jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Category first" }));
jComboBox2.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
jComboBox2ActionPerformed(evt);
}
});

jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Sub Category" }));
jComboBox3.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
jComboBox3ActionPerformed(evt);
}
});

jTable1.setModel(new javax.swing.table.DefaultTableModel(
new Object [][] {

},
new String [] {
"Product ID", "Product Name", "Price", "Qty", "Total Cost"
}
));
jScrollPane1.setViewportView(jTable1);

jButton1.setText("Remove");
jButton1.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
jButton1ActionPerformed(evt);
}
});

jButton2.setText("Save");
jButton2.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
jButton2ActionPerformed(evt);
}
});

jDateChooser1.setToolTipText("Choose Date of Purchase");

jLabel1.setText("Bill No");

jLabel2.setText("0");
jLabel2.setToolTipText("");

jLabel3.setText("Qty");

jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
jFormattedTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
public void keyPressed(java.awt.event.KeyEvent evt) {
jFormattedTextField1KeyPressed(evt);
}
});

jButton3.setText("Add");
jButton3.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
jButton3ActionPerformed(evt);
}
});

jLabel4.setText("Price");

jFormattedTextField2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

jLabel5.setText("Grand Total");

jLabel6.setText("0");

jButton4.setText("Print Bill");
jButton4.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
jButton4ActionPerformed(evt);
}
});

javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
getContentPane().setLayout(layout);
layout.setHorizontalGroup(
layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
.addGap(29, 29, 29)
.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addComponent(jScrollPane1)
.addGroup(layout.createSequentialGroup()
.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
.addGroup(layout.createSequentialGroup()
.addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
.addGap(5, 5, 5)
.addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
.addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
.addGap(18, 18, 18)
.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(layout.createSequentialGroup()
.addComponent(jLabel4)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
.addComponent(jFormattedTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
.addComponent(jLabel3)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
.addComponent(jFormattedTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
.addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
.addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
.addGap(0, 0, Short.MAX_VALUE)
.addComponent(jLabel5)
.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(layout.createSequentialGroup()
.addGap(69, 69, 69)
.addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
.addGroup(layout.createSequentialGroup()
.addGap(41, 41, 41)
.addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))))
.addGroup(layout.createSequentialGroup()
.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
.addComponent(jComboBox2, 0, 238, Short.MAX_VALUE)
.addComponent(jTextField1))
.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(layout.createSequentialGroup()
.addGap(18, 18, 18)
.addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
.addGroup(layout.createSequentialGroup()
.addGap(18, 18, 18)
.addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
.addGap(41, 41, 41))
);
layout.setVerticalGroup(
layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(layout.createSequentialGroup()
.addGap(38, 38, 38)
.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
.addComponent(jLabel1)
.addComponent(jLabel2)
.addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
.addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
.addGap(18, 45, Short.MAX_VALUE)
.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
.addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
.addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
.addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
.addComponent(jLabel3)
.addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
.addComponent(jLabel4)
.addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
.addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
.addComponent(jButton1))
.addGap(11, 11, 11)
.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(layout.createSequentialGroup()
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addComponent(jLabel5)
.addComponent(jLabel6))
.addGap(17, 17, 17)
.addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
.addGroup(layout.createSequentialGroup()
.addGap(19, 19, 19)
.addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
.addContainerGap())
);

pack();
}// </editor-fold>

private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) { 

if(jComboBox1.getSelectedIndex()>0)
{
Connection myconnection;
try
{
myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
try
{
String a="select * from subcategory_table where catname=?";
PreparedStatement mystatement=myconnection.prepareStatement(a); 
mystatement.setString(1, jComboBox1.getSelectedItem().toString());

ResultSet myresult=mystatement.executeQuery(); 
if(myresult.next())
{
jComboBox2.removeAllItems();
jComboBox2.addItem("Choose Sub Category now");
do
{
jComboBox2.addItem(myresult.getString("subcatname"));
}
while(myresult.next());
}
else
{
JOptionPane.showMessageDialog(rootPane, "No Sub Categories added yet");
}
}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
}
finally
{
myconnection.close();
}

}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
}



}






}

private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) { 
if(jComboBox1.getSelectedIndex()>0 && jComboBox2.getSelectedIndex()>0)
{
Connection myconnection;
try
{
myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
try
{
String a="select * from product_table where category=? and subcatname=?";
PreparedStatement mystatement=myconnection.prepareStatement(a); 
mystatement.setString(1, jComboBox1.getSelectedItem().toString());
mystatement.setString(2, jComboBox2.getSelectedItem().toString());

ResultSet myresult=mystatement.executeQuery(); 
if(myresult.next())
{
jComboBox3.removeAllItems();
jComboBox3.addItem("Choose Product Now");

do
{
jComboBox3.addItem(myresult.getString("pname"));
}
while(myresult.next());
}
else
{
JOptionPane.showMessageDialog(rootPane, "No Sub Categories added yet");
}
}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
}
finally
{
myconnection.close();
}

}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
}



}
}

void fetchbillno()
{
String path="jdbc:mysql://localhost/stockdb";
try
{
Connection myconn = DriverManager.getConnection(path, "root", "");
try
{
String q="select max(billno) from salestable";
PreparedStatement myst = myconn.prepareStatement(q);

ResultSet res = myst.executeQuery();

if(res.next())
{
if(res.getInt(1)==0)
{
jLabel2.setText("1");
}
else
{
int billno=res.getInt(1);
jLabel2.setText(String.valueOf(billno+1));
}
}

}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, e.getMessage());
}
finally
{
myconn.close();
}
}
catch(SQLException se)
{
JOptionPane.showMessageDialog(rootPane, "Error in connection" + se.getMessage());
} 
}



private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {




}

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) { 

DefaultTableModel mymodel=(DefaultTableModel) jTable1.getModel();
mymodel.removeRow(jTable1.getSelectedRow());
int sum=0;
for(int x=0;x<jTable1.getRowCount();x++)
{
sum=sum+Integer.parseInt(jTable1.getValueAt(x, 4).toString());

}
jLabel6.setText(String.valueOf(sum));

}

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {

int rows=jTable1.getRowCount();
boolean flag=false;
Connection myconnection;

try
{
myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
try
{
String a="insert into salestable values(?,?,?,?)";
PreparedStatement mystatement=myconnection.prepareStatement(a);

mystatement.setString(1, jLabel2.getText());
mystatement.setString(2, jTextField1.getText());
SimpleDateFormat myformat=new SimpleDateFormat("yyyy-MM-dd");
mystatement.setString(3, myformat.format(jDateChooser1.getDate()));
mystatement.setString(4, jLabel6.getText());

if(mystatement.executeUpdate()==1)
{
for(int x=0;x<rows;x++)
{
String a2="insert into salesdetails(billno,pid,pname,price,"
+ "qty,totalcost) "
+ "values(?,?,?,?,?,?)";
PreparedStatement mystatement2=myconnection.prepareStatement(a2);

mystatement2.setString(1, jLabel2.getText());
mystatement2.setString(2, jTable1.getValueAt(x, 0).toString());
myformat=new SimpleDateFormat("yyyy-MM-dd");
mystatement2.setString(3, jTable1.getValueAt(x, 1).toString());
mystatement2.setString(4, jTable1.getValueAt(x, 2).toString());
mystatement2.setString(5, jTable1.getValueAt(x, 3).toString());
mystatement2.setString(6, jTable1.getValueAt(x, 4).toString());
if(mystatement2.executeUpdate()==1)
{

String a3="update product_table set qty=qty-? where pid=?";
PreparedStatement mystatement3=myconnection.prepareStatement(a3);

mystatement3.setString(1, jTable1.getValueAt(x, 3).toString());
mystatement3.setString(2, jTable1.getValueAt(x, 0).toString()); 
if(mystatement3.executeUpdate()==1)
{
flag=true;
}
else
{
flag=false;
}

}
else
{
flag=false;
JOptionPane.showMessageDialog(rootPane, "Error in Saving Successfully ");
}
}
if(flag)
{
JOptionPane.showMessageDialog(rootPane, "Saved Successfully");
jButton4.setVisible(true);
}
}
}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
}
finally
{
myconnection.close();
}

}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
}






}

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) { 
if(jComboBox1.getSelectedIndex()>0 && jComboBox2.getSelectedIndex()>0 && jComboBox3.getSelectedIndex()>0)
{
Connection myconnection;
try
{
myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
try
{
String a="select * from product_table where category=? and subcatname=?"
+ " and pname=?";
PreparedStatement mystatement=myconnection.prepareStatement(a); 
mystatement.setString(1, jComboBox1.getSelectedItem().toString());
mystatement.setString(2, jComboBox2.getSelectedItem().toString());
mystatement.setString(3, jComboBox3.getSelectedItem().toString());
DefaultTableModel mymodel=(DefaultTableModel) jTable1.getModel();
ResultSet myresult=mystatement.executeQuery(); 
if(myresult.next())
{
jScrollPane1.setVisible(true);
getContentPane().revalidate();

jTable1.getColumnModel().getColumn(1).setPreferredWidth(200);
jTable1.getColumnModel().getColumn(1).setWidth(200);

String pid,pname,price,category;
int qty,currentqty;
pid=myresult.getString("pid");


pname=myresult.getString("pname");
price=jFormattedTextField2.getText();
qty=Integer.parseInt(jFormattedTextField1.getText());
currentqty=myresult.getInt("qty");
if(qty>currentqty)
{
JOptionPane.showMessageDialog(rootPane, "Sorry, out of stock. Maximum qty available is " + currentqty);
}
else
{

int totalcost=Integer.parseInt(price)*qty;
mymodel.addRow(new Object[]{pid,pname,price,qty,totalcost});

// if(flag2) 
// {
// for(int x=0;x<jTable1.getRowCount();x++)
// {
// if(jTable1.getValueAt(x,0).equals(pid))
// {
// flag3=false;
// break;
// } 
// }
// if(flag3==true)
// {
// 
// }
// 
// }
// else
// {
// mymodel.addRow(new Object[]{pid,pname,price,qty,totalcost});
// flag2=true;
// }



}


}
else
{
jScrollPane1.setVisible(false);
JOptionPane.showMessageDialog(rootPane, "No Records available");
}
int sum=0;
for(int x=0;x<jTable1.getRowCount();x++)
{
sum=sum+Integer.parseInt(jTable1.getValueAt(x, 4).toString());

}
jLabel6.setText(String.valueOf(sum));



}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
}
finally
{
myconnection.close();
}

}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
}

} 

}

private void jFormattedTextField1KeyPressed(java.awt.event.KeyEvent evt) { 
if(evt.getKeyCode()==KeyEvent.VK_ENTER)
{
if(jComboBox1.getSelectedIndex()>0 && jComboBox2.getSelectedIndex()>0 && jComboBox3.getSelectedIndex()>0)
{
Connection myconnection;
try
{
myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
try
{
String a="select * from product_table where category=? and subcatname=?"
+ " and pname=?";
PreparedStatement mystatement=myconnection.prepareStatement(a); 
mystatement.setString(1, jComboBox1.getSelectedItem().toString());
mystatement.setString(2, jComboBox2.getSelectedItem().toString());
mystatement.setString(3, jComboBox3.getSelectedItem().toString());
DefaultTableModel mymodel=(DefaultTableModel) jTable1.getModel();
ResultSet myresult=mystatement.executeQuery(); 
if(myresult.next())
{
jScrollPane1.setVisible(true);
getContentPane().revalidate();

jTable1.getColumnModel().getColumn(1).setPreferredWidth(200);
jTable1.getColumnModel().getColumn(1).setWidth(200);

String pid,pname,price,qty,category;
pid=myresult.getString("pid");
pname=myresult.getString("pname");
price=jFormattedTextField2.getText();
qty=jFormattedTextField1.getText();
int totalcost=Integer.parseInt(price)*Integer.parseInt(qty);

mymodel.addRow(new Object[]{pid,pname,price,qty,totalcost});



}
else
{
jScrollPane1.setVisible(false);
JOptionPane.showMessageDialog(rootPane, "No Records available");
}
int sum=0;
for(int x=0;x<jTable1.getRowCount();x++)
{
sum=sum+Integer.parseInt(jTable1.getValueAt(x, 4).toString());

}
jLabel6.setText(String.valueOf(sum));



}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
}
finally
{
myconnection.close();
}

}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
}

} 
}
}

private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) { 

printbill.bill_no=jLabel2.getText();
printbill obj=new printbill();
parentFrame.jDesktopPane1.add(obj);
obj.setVisible(true);


}

