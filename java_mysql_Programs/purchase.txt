/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stock_mgt;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static stock_mgt.myvariables.PASSWORD;
import static stock_mgt.myvariables.PATH;
import static stock_mgt.myvariables.PLACE;
import static stock_mgt.myvariables.USERNAME;

/**
 *
 * @author GTB Projector Room
 */
public class purchase extends javax.swing.JInternalFrame {

 /**
 * Creates new form purchase
 */
 public purchase() {
 initComponents(); 
 
 java.util.Date obj=new java.util.Date();
 SimpleDateFormat myformat=new SimpleDateFormat("yyyy-MM-dd");
 datebox.setText(myformat.format(obj));
 
 
 
 try
 {
 Connection myconnection = DriverManager.getConnection(
 PATH+PLACE, USERNAME,PASSWORD);
 try
 {
 String query="select * from category_table";
 PreparedStatement mystatement=myconnection.prepareStatement(query);
 
 ResultSet myresult = mystatement.executeQuery();
 
 if(myresult.next())
 {
 do
 {
 categorybox.addItem(myresult.getString("categoryname"));
 }
 while(myresult.next());
 }
 else
 {
 JOptionPane.showMessageDialog(rootPane, "No Categories exist");
 
 }
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane,
 "Error in sql query block due to "
 + e.getMessage());
 }
 finally
 {
 myconnection.close();
 }
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane,
 "Error in establishing connection due to " + e.getMessage());
 }
 
 }

 /**
 * This method is called from within the constructor to initialize the form.
 * WARNING: Do NOT modify this code. The content of this method is always
 * regenerated by the Form Editor.
 */
 @SuppressWarnings("unchecked")
 // <editor-fold defaultstate="collapsed" desc="Generated Code"> 
 private void initComponents() {

 jLabel15 = new javax.swing.JLabel();
 datebox = new javax.swing.JLabel();
 jButton2 = new javax.swing.JButton();
 grandtotalbox = new javax.swing.JLabel();
 jButton3 = new javax.swing.JButton();
 jPanel1 = new javax.swing.JPanel();
 jLabel1 = new javax.swing.JLabel();
 supplierbox = new javax.swing.JComboBox<>();
 jLabel2 = new javax.swing.JLabel();
 addressbox = new javax.swing.JLabel();
 jLabel4 = new javax.swing.JLabel();
 phonebox = new javax.swing.JLabel();
 jLabel6 = new javax.swing.JLabel();
 gstbox = new javax.swing.JLabel();
 jLabel8 = new javax.swing.JLabel();
 invoicenobox = new javax.swing.JTextField();
 jLabel14 = new javax.swing.JLabel();
 supplierdatebox = new com.toedter.calendar.JDateChooser();
 jPanel2 = new javax.swing.JPanel();
 jLabel9 = new javax.swing.JLabel();
 categorybox = new javax.swing.JComboBox<>();
 jLabel10 = new javax.swing.JLabel();
 subcategorybox = new javax.swing.JComboBox<>();
 jLabel11 = new javax.swing.JLabel();
 productbox = new javax.swing.JComboBox<>();
 jLabel12 = new javax.swing.JLabel();
 ratebox = new javax.swing.JTextField();
 jLabel13 = new javax.swing.JLabel();
 qtybox = new javax.swing.JTextField();
 jButton1 = new javax.swing.JButton();
 jLabel3 = new javax.swing.JLabel();
 productidbox = new javax.swing.JLabel();
 jScrollPane1 = new javax.swing.JScrollPane();
 jTable1 = new javax.swing.JTable();
 jLabel5 = new javax.swing.JLabel();

 setClosable(true);
 setTitle("Purchase");
 addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
 public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
 formInternalFrameActivated(evt);
 }
 public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
 }
 public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
 }
 public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
 }
 public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
 }
 public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
 }
 public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
 }
 });

 jLabel15.setText("Current Date");

 datebox.setText("..................");

 jButton2.setText("Remove Item");
 jButton2.addActionListener(new java.awt.event.ActionListener() {
 public void actionPerformed(java.awt.event.ActionEvent evt) {
 jButton2ActionPerformed(evt);
 }
 });

 grandtotalbox.setText("0");

 jButton3.setText("Save Purchase");
 jButton3.addActionListener(new java.awt.event.ActionListener() {
 public void actionPerformed(java.awt.event.ActionEvent evt) {
 jButton3ActionPerformed(evt);
 }
 });

 jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Supplier Details"));

 jLabel1.setText("Choose Supplier");

 supplierbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Supplier" }));
 supplierbox.addActionListener(new java.awt.event.ActionListener() {
 public void actionPerformed(java.awt.event.ActionEvent evt) {
 supplierboxActionPerformed(evt);
 }
 });

 jLabel2.setText("Address");

 addressbox.setText("........................");

 jLabel4.setText("Phone");

 phonebox.setText("........................");

 jLabel6.setText("GST No");

 gstbox.setText("........................");

 jLabel8.setText("Supplier Bill No");

 jLabel14.setText("Supplier Bill Date");

 javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
 jPanel1.setLayout(jPanel1Layout);
 jPanel1Layout.setHorizontalGroup(
 jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
 .addGroup(jPanel1Layout.createSequentialGroup()
 .addContainerGap()
 .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
 .addComponent(jLabel1)
 .addComponent(jLabel2)
 .addComponent(jLabel4)
 .addComponent(jLabel6)
 .addComponent(jLabel8)
 .addComponent(jLabel14))
 .addGap(46, 46, 46)
 .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
 .addComponent(supplierbox, 0, 238, Short.MAX_VALUE)
 .addComponent(addressbox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
 .addComponent(phonebox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
 .addComponent(gstbox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
 .addComponent(supplierdatebox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
 .addComponent(invoicenobox))
 .addContainerGap())
 );
 jPanel1Layout.setVerticalGroup(
 jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
 .addGroup(jPanel1Layout.createSequentialGroup()
 .addContainerGap()
 .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
 .addComponent(jLabel1)
 .addComponent(supplierbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
 .addGap(18, 18, 18)
 .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
 .addComponent(jLabel2)
 .addComponent(addressbox))
 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
 .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
 .addComponent(jLabel4)
 .addComponent(phonebox))
 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
 .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
 .addComponent(jLabel6)
 .addComponent(gstbox))
 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
 .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
 .addComponent(jLabel8)
 .addComponent(invoicenobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
 .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
 .addComponent(jLabel14)
 .addComponent(supplierdatebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
 .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
 );

 jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Product Details"));

 jLabel9.setText("Choose Category");

 categorybox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose" }));
 categorybox.addActionListener(new java.awt.event.ActionListener() {
 public void actionPerformed(java.awt.event.ActionEvent evt) {
 categoryboxActionPerformed(evt);
 }
 });

 jLabel10.setText("Choose Sub Category");

 subcategorybox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose" }));
 subcategorybox.addActionListener(new java.awt.event.ActionListener() {
 public void actionPerformed(java.awt.event.ActionEvent evt) {
 subcategoryboxActionPerformed(evt);
 }
 });

 jLabel11.setText("Choose Product");

 productbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose" }));
 productbox.addActionListener(new java.awt.event.ActionListener() {
 public void actionPerformed(java.awt.event.ActionEvent evt) {
 productboxActionPerformed(evt);
 }
 });

 jLabel12.setText("Purchase Rate");

 jLabel13.setText("Quantity");

 jButton1.setText("Add");
 jButton1.addActionListener(new java.awt.event.ActionListener() {
 public void actionPerformed(java.awt.event.ActionEvent evt) {
 jButton1ActionPerformed(evt);
 }
 });

 jLabel3.setText("Product ID");

 productidbox.setText("...");

 javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
 jPanel2.setLayout(jPanel2Layout);
 jPanel2Layout.setHorizontalGroup(
 jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
 .addGroup(jPanel2Layout.createSequentialGroup()
 .addContainerGap()
 .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
 .addComponent(jLabel9)
 .addComponent(jLabel10)
 .addComponent(jLabel11)
 .addComponent(jLabel12)
 .addComponent(jLabel13)
 .addComponent(jLabel3))
 .addGap(9, 9, 9)
 .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
 .addGroup(jPanel2Layout.createSequentialGroup()
 .addComponent(productidbox)
 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
 .addComponent(jButton1))
 .addComponent(qtybox)
 .addComponent(ratebox)
 .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
 .addGap(0, 0, Short.MAX_VALUE)
 .addComponent(categorybox, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
 .addComponent(subcategorybox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
 .addComponent(productbox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
 .addContainerGap())
 );
 jPanel2Layout.setVerticalGroup(
 jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
 .addGroup(jPanel2Layout.createSequentialGroup()
 .addContainerGap()
 .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
 .addComponent(jLabel9)
 .addComponent(categorybox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
 .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
 .addComponent(jLabel10)
 .addComponent(subcategorybox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
 .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
 .addComponent(jLabel11)
 .addComponent(productbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
 .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
 .addComponent(jLabel12)
 .addComponent(ratebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
 .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
 .addComponent(jLabel13)
 .addComponent(qtybox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
 .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
 .addComponent(jButton1)
 .addComponent(jLabel3)
 .addComponent(productidbox))
 .addContainerGap(15, Short.MAX_VALUE))
 );

 jTable1.setModel(new javax.swing.table.DefaultTableModel(
 new Object [][] {

 },
 new String [] {
 "Product ID", "Name", "Rate", "Qty", "Total Cost"
 }
 ));
 jScrollPane1.setViewportView(jTable1);

 jLabel5.setText("Grand Total");

 javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
 getContentPane().setLayout(layout);
 layout.setHorizontalGroup(
 layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
 .addGroup(layout.createSequentialGroup()
 .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
 .addGroup(layout.createSequentialGroup()
 .addGap(609, 609, 609)
 .addComponent(jLabel15)
 .addGap(43, 43, 43)
 .addComponent(datebox))
 .addGroup(layout.createSequentialGroup()
 .addGap(29, 29, 29)
 .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
 .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
 .addGroup(layout.createSequentialGroup()
 .addGap(29, 29, 29)
 .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 758, javax.swing.GroupLayout.PREFERRED_SIZE)
 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
 .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
 .addComponent(jButton2)
 .addComponent(jButton3)
 .addComponent(jLabel5)
 .addGroup(layout.createSequentialGroup()
 .addGap(38, 38, 38)
 .addComponent(grandtotalbox)))))
 .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
 );
 layout.setVerticalGroup(
 layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
 .addGroup(layout.createSequentialGroup()
 .addGap(11, 11, 11)
 .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
 .addComponent(jLabel15)
 .addComponent(datebox))
 .addGap(11, 11, 11)
 .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
 .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
 .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
 .addGap(18, 18, 18)
 .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
 .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
 .addGroup(layout.createSequentialGroup()
 .addComponent(jButton2)
 .addGap(39, 39, 39)
 .addComponent(jLabel5)
 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
 .addComponent(grandtotalbox)
 .addGap(71, 71, 71)
 .addComponent(jButton3)))
 .addGap(29, 29, 29))
 );

 pack();
 }// </editor-fold> 

 private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) { 
 DefaultTableModel mymodel=(DefaultTableModel) jTable1.getModel();
 int grandtotal = Integer.parseInt(grandtotalbox.getText());
 int totalcost=Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
 
 int newgrandtotal = grandtotal - totalcost;
 grandtotalbox.setText(String.valueOf(newgrandtotal));
 mymodel.removeRow(jTable1.getSelectedRow());
 
 } 

 private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) { 
 boolean flag=false;
 try
 {
 Connection myconnection = DriverManager.getConnection(
 PATH+PLACE, USERNAME,PASSWORD);
 try
 {
 String query1="insert into purchasetable values(?,?,?,?,?)";
 PreparedStatement mystatement = 
 myconnection.prepareStatement(query1);
 mystatement.setString(1, invoicenobox.getText());
 mystatement.setString(2, supplierbox.getSelectedItem().toString());
 SimpleDateFormat myformat = new SimpleDateFormat("yyyy-MM-dd");
 mystatement.setString(3, myformat.format(supplierdatebox.getDate()));
 mystatement.setString(4, grandtotalbox.getText());
 mystatement.setString(5, datebox.getText());
 if(mystatement.executeUpdate()>0)
 {
 
 for(int x=0;x<jTable1.getRowCount();x++)
 {
 
 String query2="insert into purchase_detail values(?,?,?,?,?,?)";
 PreparedStatement mystatement2 = 
 myconnection.prepareStatement(query2);
 mystatement2.setString(1, invoicenobox.getText());
 mystatement2.setString(2, jTable1.getValueAt(x, 0).toString());
 
 mystatement2.setString(3, jTable1.getValueAt(x, 1).toString());
 mystatement2.setString(4, jTable1.getValueAt(x, 2).toString());
 mystatement2.setString(5, jTable1.getValueAt(x, 3).toString());
 mystatement2.setString(6, jTable1.getValueAt(x, 4).toString());
 if(mystatement2.executeUpdate()>0)
 {
 String query3="update product_table set qty=qty+? where productid=?";
 PreparedStatement mystatement3 = 
 myconnection.prepareStatement(query3);
 mystatement3.setString(1, jTable1.getValueAt(x, 3).toString());
 mystatement3.setString(2, jTable1.getValueAt(x, 0).toString());

 if(mystatement3.executeUpdate()>0)
 {
 flag=true;
 }
 }
 
 }
 if(flag)
 {
 JOptionPane.showMessageDialog(rootPane, 
 "Purchase Saved Successfully");
 }
 
 
 
 
 }
 else
 {
 JOptionPane.showMessageDialog(rootPane, 
 "Problem in saving");
 }
 }
 catch(Exception e) 
 {
 JOptionPane.showMessageDialog(rootPane, 
 "Error in sql query block due to " 
 + e.getMessage());
 e.printStackTrace();
 }
 finally
 {
 myconnection.close();
 }
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane, 
 "Error in establishing connection due to " + e.getMessage());
 e.printStackTrace();
 } 
 
 } 

 private void supplierboxActionPerformed(java.awt.event.ActionEvent evt) { 
 
 if (supplierbox.getSelectedIndex()>0)
 {
 
 try
 {
 Connection myconnection = DriverManager.getConnection(
 PATH+PLACE, USERNAME,PASSWORD);
 try
 {
 
 String query2="select * from suppliertable where suppliername=?";
 PreparedStatement mystatement2=myconnection.prepareStatement(query2);
 mystatement2.setString(1, supplierbox.getSelectedItem().toString());
 ResultSet myresult2 = mystatement2.executeQuery();
 
 if(myresult2.next())
 {
 
 
 addressbox.setText(myresult2.getString("address"));
 phonebox.setText(myresult2.getString("phone"));
 gstbox.setText(myresult2.getString("gstno"));
 
 
 }
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane,
 "Error in sql query block due to "
 + e.getMessage());
 }
 finally
 {
 myconnection.close();
 }
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane,
 "Error in establishing connection due to " + e.getMessage());
 }
 }
 
 
 
 
 
 
 
 } 

 private void categoryboxActionPerformed(java.awt.event.ActionEvent evt) { 
 if(categorybox.getSelectedIndex()>0)
 {
 try
 {
 Connection myconnection = DriverManager.getConnection(
 PATH+PLACE, USERNAME,PASSWORD);
 try
 {
 String query="select * from subcategorytable where categoryname=?";
 PreparedStatement mystatement=myconnection.prepareStatement(query);
 mystatement.setString(1, categorybox.getSelectedItem().toString());
 ResultSet myresult = mystatement.executeQuery();
 
 if(myresult.next())
 {
 subcategorybox.removeAllItems();
 subcategorybox.addItem("Choose Sub Category now");
 do
 {
 subcategorybox.addItem(myresult.getString("subcategoryname"));
 }
 while(myresult.next());
 }
 else
 {
 JOptionPane.showMessageDialog(rootPane, "No Sub Category exist / added");
 
 }
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane,
 "Error in sql query block due to "
 + e.getMessage());
 }
 finally
 {
 myconnection.close();
 }
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane,
 "Error in establishing connection due to " + e.getMessage());
 }
 
 
 } 
 } 

 private void subcategoryboxActionPerformed(java.awt.event.ActionEvent evt) { 
 if(subcategorybox.getSelectedIndex()>0)
 {
 try
 {
 Connection myconnection = DriverManager.getConnection(
 PATH+PLACE, USERNAME,PASSWORD);
 try
 {
 String query="select * from product_table where subcategoryname=?";
 PreparedStatement mystatement=myconnection.prepareStatement(query);
 mystatement.setString(1, subcategorybox.getSelectedItem().toString());
 ResultSet myresult = mystatement.executeQuery();
 
 if(myresult.next())
 {
 productbox.removeAllItems();
 productbox.addItem("Choose Product now");
 do
 {
 productbox.addItem(myresult.getString("productname"));
 }
 while(myresult.next());
 }
 else
 {
 JOptionPane.showMessageDialog(rootPane, "No Products exist / added");
 
 }
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane,
 "Error in sql query block due to "
 + e.getMessage());
 }
 finally
 {
 myconnection.close();
 }
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane,
 "Error in establishing connection due to " + e.getMessage());
 }
 
 
 } 
 } 

 private void productboxActionPerformed(java.awt.event.ActionEvent evt) { 
 if (productbox.getSelectedIndex()>0)
 {
 
 try
 {
 Connection myconnection = DriverManager.getConnection(
 PATH+PLACE, USERNAME,PASSWORD);
 try
 {
 
 String query2="select * from product_table where productname=?";
 PreparedStatement mystatement2=myconnection.prepareStatement(query2);
 mystatement2.setString(1, productbox.getSelectedItem().toString());
 ResultSet myresult2 = mystatement2.executeQuery();
 
 if(myresult2.next())
 {
 
 productidbox.setText(myresult2.getString("productid"));
 
 
 
 }
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane,
 "Error in sql query block due to "
 + e.getMessage());
 }
 finally
 {
 myconnection.close();
 }
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane,
 "Error in establishing connection due to " + e.getMessage());
 }
 } 
 } 

 private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) { 

 try
 {
 
 DefaultTableModel mymodel =(DefaultTableModel) jTable1.getModel();
 int totalcost=Integer.parseInt(ratebox.getText()) * 
 Integer.parseInt(qtybox.getText());
 int grandtotal = Integer.parseInt(grandtotalbox.getText());
 int newgrandtotal = grandtotal + totalcost;
 grandtotalbox.setText(String.valueOf(newgrandtotal));
 mymodel.addRow(new Object[]{productidbox.getText(), 
 productbox.getSelectedItem().toString(), ratebox.getText(), 
 qtybox.getText(),totalcost});
 
 
 
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane,
 "Error in establishing connection due to " + e.getMessage());
 }








 
 } 
 void fetchdata()
 {
 try
 {
 Connection myconnection = DriverManager.getConnection(
 PATH+PLACE, USERNAME,PASSWORD);
 try
 {
 
 String query2="select * from suppliertable";
 PreparedStatement mystatement2=myconnection.prepareStatement(query2);
 
 ResultSet myresult2 = mystatement2.executeQuery();
 
 if(myresult2.next())
 {
 supplierbox.removeAllItems();
 supplierbox.addItem("Choose Supplier");
 do
 {
 
 supplierbox.addItem(myresult2.getString("suppliername"));
 }
 while(myresult2.next());
 
 }
 
 
 String query="select max(invoiceno) from purchasetable";
 PreparedStatement mystatement=myconnection.prepareStatement(query);
 
 ResultSet myresult = mystatement.executeQuery();
 
 if(myresult.next())
 {
 if(myresult.getInt(1)==0)
 {
 invoicenobox.setText("1");
 }
 else
 {
 int newinvoiceno = myresult.getInt(1)+1;
 invoicenobox.setText(String.valueOf(newinvoiceno));
 }
 }
 else
 {
 JOptionPane.showMessageDialog(rootPane, "Wrong username/password");
 
 }
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane,
 "Error in sql query block due to "
 + e.getMessage());
 }
 finally
 {
 myconnection.close();
 }
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane,
 "Error in establishing connection due to " + e.getMessage());
 }
 }
 private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) { 
 
 fetchdata();
 
 
 } 
