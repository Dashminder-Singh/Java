/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package stockmgt;

import java.awt.Image;

import java.io.*;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import static stockmgt.globalvariables.PASSWORD;
import static stockmgt.globalvariables.PATH;
import static stockmgt.globalvariables.PLACE;
import static stockmgt.globalvariables.USERNAME;

/**
*
* @author GTB Projector
*/
public class addemployee extends javax.swing.JInternalFrame {

File myfile;
String oldfilename;
public addemployee() {
initComponents();

java.util.Date obj=new java.util.Date();
SimpleDateFormat myformat=new SimpleDateFormat("yyyy-MM-dd");
try 
{ 
jDateChooser1.setDate(myformat.parse(myformat.format(obj)));
} 
catch (Exception ex) 
{

}

}

/**
* This method is called from within the constructor to initialize the form.
* WARNING: Do NOT modify this code. The content of this method is always
* regenerated by the Form Editor.
*/
@SuppressWarnings("unchecked")
// <editor-fold defaultstate="collapsed" desc="Generated Code"> 
private void initComponents() {

buttonGroup1 = new javax.swing.ButtonGroup();
jTabbedPane1 = new javax.swing.JTabbedPane();
jPanel1 = new javax.swing.JPanel();
jLabel1 = new javax.swing.JLabel();
jTextField1 = new javax.swing.JTextField();
jLabel2 = new javax.swing.JLabel();
jScrollPane1 = new javax.swing.JScrollPane();
jTextArea1 = new javax.swing.JTextArea();
jLabel3 = new javax.swing.JLabel();
jRadioButton1 = new javax.swing.JRadioButton();
jRadioButton2 = new javax.swing.JRadioButton();
jLabel4 = new javax.swing.JLabel();
jDateChooser1 = new com.toedter.calendar.JDateChooser();
jLabel5 = new javax.swing.JLabel();
jFormattedTextField1 = new javax.swing.JFormattedTextField();
jButton3 = new javax.swing.JButton();
jLabel7 = new javax.swing.JLabel();
jButton1 = new javax.swing.JButton();
jButton4 = new javax.swing.JButton();
jButton5 = new javax.swing.JButton();
jPanel2 = new javax.swing.JPanel();
jLabel6 = new javax.swing.JLabel();
jTextField2 = new javax.swing.JTextField();
jButton2 = new javax.swing.JButton();

jLabel1.setText("Name");

jLabel2.setText("Address");

jTextArea1.setColumns(20);
jTextArea1.setRows(5);
jScrollPane1.setViewportView(jTextArea1);

jLabel3.setText("Gender");

buttonGroup1.add(jRadioButton1);
jRadioButton1.setText("Male");

buttonGroup1.add(jRadioButton2);
jRadioButton2.setText("Female");

jLabel4.setText("Date of Birth");

jLabel5.setText("Phone");

try {
jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##########")));
} catch (java.text.ParseException ex) {
ex.printStackTrace();
}

jButton3.setText("Save");
jButton3.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
jButton3ActionPerformed(evt);
}
});

jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

jButton1.setText("Upload");
jButton1.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
jButton1ActionPerformed(evt);
}
});

jButton4.setText("Fetch");
jButton4.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
jButton4ActionPerformed(evt);
}
});

jButton5.setText("Update");
jButton5.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
jButton5ActionPerformed(evt);
}
});

javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
jPanel1.setLayout(jPanel1Layout);
jPanel1Layout.setHorizontalGroup(
jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
.addGap(58, 58, 58)
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(jPanel1Layout.createSequentialGroup()
.addComponent(jLabel4)
.addGap(18, 18, 18)
.addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
.addGroup(jPanel1Layout.createSequentialGroup()
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
.addGroup(jPanel1Layout.createSequentialGroup()
.addComponent(jLabel3)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
.addComponent(jRadioButton1)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
.addComponent(jRadioButton2))
.addGroup(jPanel1Layout.createSequentialGroup()
.addComponent(jLabel2)
.addGap(28, 28, 28)
.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
.addGroup(jPanel1Layout.createSequentialGroup()
.addComponent(jLabel1)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
.addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(jPanel1Layout.createSequentialGroup()
.addGap(120, 120, 120)
.addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
.addGroup(jPanel1Layout.createSequentialGroup()
.addGap(96, 96, 96)
.addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))))
.addGroup(jPanel1Layout.createSequentialGroup()
.addComponent(jLabel5)
.addGap(18, 18, 18)
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
.addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
.addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
.addComponent(jFormattedTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
.addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
.addContainerGap(175, Short.MAX_VALUE))
);
jPanel1Layout.setVerticalGroup(
jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(jPanel1Layout.createSequentialGroup()
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(jPanel1Layout.createSequentialGroup()
.addGap(31, 31, 31)
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
.addComponent(jLabel1)
.addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addComponent(jLabel2)
.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
.addGap(24, 24, 24))
.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
.addGap(21, 21, 21)
.addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
.addGap(16, 16, 16)))
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
.addComponent(jLabel3)
.addComponent(jRadioButton1)
.addComponent(jRadioButton2)
.addComponent(jButton1))
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
.addComponent(jLabel4)
.addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
.addGap(18, 18, 18)
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
.addComponent(jLabel5)
.addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
.addComponent(jButton4))
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
.addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
.addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
.addContainerGap(20, Short.MAX_VALUE))
);

jTabbedPane1.addTab("Personal Information", jPanel1);

jLabel6.setText("jLabel6");

jTextField2.setText("jTextField2");

jButton2.setText("jButton2");
jButton2.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
jButton2ActionPerformed(evt);
}
});

javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
jPanel2.setLayout(jPanel2Layout);
jPanel2Layout.setHorizontalGroup(
jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(jPanel2Layout.createSequentialGroup()
.addGap(61, 61, 61)
.addComponent(jLabel6)
.addGap(27, 27, 27)
.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
.addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
.addComponent(jTextField2))
.addContainerGap(462, Short.MAX_VALUE))
);
jPanel2Layout.setVerticalGroup(
jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(jPanel2Layout.createSequentialGroup()
.addGap(35, 35, 35)
.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
.addComponent(jLabel6)
.addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 211, Short.MAX_VALUE)
.addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
.addGap(77, 77, 77))
);

jTabbedPane1.addTab("Salary Information", jPanel2);

javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
getContentPane().setLayout(layout);
layout.setHorizontalGroup(
layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(layout.createSequentialGroup()
.addGap(65, 65, 65)
.addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
.addContainerGap(124, Short.MAX_VALUE))
);
layout.setVerticalGroup(
layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(layout.createSequentialGroup()
.addGap(24, 24, 24)
.addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
.addContainerGap(31, Short.MAX_VALUE))
);

pack();
}// </editor-fold>

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {


} 
finally {
try {
rd.close();
outs.close();
} catch (Exception e) {
JOptionPane.showMessageDialog(rootPane, "error in closing file" + e.getMessage());
}
}
}
else
{
filename="default.png";

}


try
{
Connection myconnection;
myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
try
{
if((jRadioButton1.isSelected() || jRadioButton2.isSelected()) 
&& jTextField1.getText().length()>3)
{
String q="insert into emp_table values(?,?,?,?,?,?,?)";
PreparedStatement mystatement=myconnection.prepareStatement(q);
mystatement.setString(1, jTextField1.getText());
mystatement.setString(2, jTextArea1.getText());

if(jRadioButton1.isSelected())
{
mystatement.setString(3, "Male");
}
else if(jRadioButton2.isSelected())
{
mystatement.setString(3, "Female"); 
}

SimpleDateFormat myformat=new SimpleDateFormat("yyyy-MM-dd");

mystatement.setString(4, myformat.format(jDateChooser1.getDate()));

mystatement.setString(5, jFormattedTextField1.getText());

java.util.Date dateobj=new java.util.Date();

SimpleDateFormat myformat2=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
mystatement.setString(6, myformat2.format(dateobj));

mystatement.setString(7, filename);
if(mystatement.executeUpdate()>0)
{
JOptionPane.showMessageDialog(rootPane, "Data saved successfully");
}
}
else
{
JOptionPane.showMessageDialog(rootPane, "Fill all values");
}

}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in Query due to " + e.getMessage());
}
finally
{
myconnection.close();
}

}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in Connection due to " + e.getMessage());
}
}
else
{
JOptionPane.showMessageDialog(rootPane, "Upload pic smaller than 300kb");
}







}

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) { 
// TODO add your handling code here:
}

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) { 

JFileChooser myfilechooser=new JFileChooser();

myfilechooser.setFileFilter(new FileFilter() {
@Override
public boolean accept(File f) {
if(f.isDirectory()) 
return true;

String extension=f.getName().substring(f.getName().lastIndexOf(".")+1);
String allowed[]={"jpg","png","gif","jpeg","bmp"};
for(String a:allowed)
{
if(a.equals(extension))
{
return true;
}
else
{
return false;
}
}
return false;

}

@Override
public String getDescription() {
return "All Picture Files";

}
});


if(myfilechooser.showOpenDialog(rootPane)==JFileChooser.APPROVE_OPTION)
{
myfile=myfilechooser.getSelectedFile();
try
{ 
Image simg = ImageIO.read( new File(myfile.getAbsolutePath())).getScaledInstance( jLabel7.getWidth(), jLabel7.getHeight(), Image.SCALE_AREA_AVERAGING);
jLabel7.setIcon(new ImageIcon(simg));
}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Cannot read image");
}
}




}

private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) { 
Connection myconnection;
try
{
myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
try
{
String a="select * from emp_table where phone=?";
PreparedStatement mystatement=myconnection.prepareStatement(a); 
mystatement.setString(1, jFormattedTextField1.getText());

ResultSet myresult=mystatement.executeQuery(); 
if(myresult.next())
{
jTextField1.setText(myresult.getString("name"));

jTextArea1.setText(myresult.getString("address"));


String myfile=myresult.getString("image");
oldfilename=myfile;
Image simg = ImageIO.read( new File("empimages//" + myfile)).getScaledInstance( jLabel7.getWidth(), jLabel7.getHeight(), Image.SCALE_DEFAULT);
jLabel7.setIcon(new ImageIcon(simg));
}
else
{
JOptionPane.showMessageDialog(rootPane, "Wrong product id");
}
}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
}
finally
{
myconnection.close();
}

}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
} 

}

private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {

String filename;
if(myfile!=null)
{
filename = new java.util.Date().getTime() + myfile.getName();//Date.getTime() added for unique file name.
int i;
FileInputStream rd = null;
FileOutputStream outs = null;

try {


rd = new FileInputStream(myfile);
outs = new FileOutputStream("empimages\\"+filename);//writing the new file in 'Images' folder, in the project

byte[] b = new byte[2048];
while ((i = rd.read(b)) !=-1) {
outs.write(b, 0, i); //copying from pictures to empimages byte by byte

}

} 
catch (Exception e) 
{
JOptionPane.showMessageDialog(rootPane, "error" + e.getMessage());
} 
finally {
try {
rd.close();
outs.close();
} catch (Exception e) {
JOptionPane.showMessageDialog(rootPane, "error in closing file" + e.getMessage());
}
}
File oldimage=new File("empimages\\" + oldfilename);
if(!oldimage.getName().equals("default.png"))
{
oldimage.delete();
}




}
else
{
filename=oldfilename;

}




try
{
Connection myconnection;
myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
try
{
if((jRadioButton1.isSelected() || jRadioButton2.isSelected()) 
&& jTextField1.getText().length()>3)
{
String q="update emp_table set name=?,address=?, gender=?, dob=?,"
+ "image=? where phone=?";
PreparedStatement mystatement=myconnection.prepareStatement(q);
mystatement.setString(1, jTextField1.getText());
mystatement.setString(2, jTextArea1.getText());

if(jRadioButton1.isSelected())
{
mystatement.setString(3, "Male");
}
else if(jRadioButton2.isSelected())
{
mystatement.setString(3, "Female"); 
}

SimpleDateFormat myformat=new SimpleDateFormat("yyyy-MM-dd");

mystatement.setString(4, myformat.format(jDateChooser1.getDate()));

mystatement.setString(5, filename);
mystatement.setString(6, jFormattedTextField1.getText());

if(mystatement.executeUpdate()>0)
{
JOptionPane.showMessageDialog(rootPane, "Data updated successfully");
}
}
else
{
JOptionPane.showMessageDialog(rootPane, "Fill all values");
}

}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in Query due to " + e.getMessage());
}
finally
{
myconnection.close();
}

}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in Connection due to " + e.getMessage());
} 
}

